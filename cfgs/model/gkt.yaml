_target_: nn_modules.gkt.cvt.CrossViewTransformer

dim_last: 64

outputs:
  bev: [0, 1]
  center: [1, 2]

encoder:
  _target_: nn_modules.gkt.geometry_kernel_transformer_encoder.GeometryKernelEncoder

  dim: 128
  scale: 1.0
  middle: [2, 2]

  backbone:
    _target_: nn_modules.gkt.backbones.efficientnet.EfficientNetExtractor

    model_name: efficientnet-b4
    layer_names: ['reduction_2', 'reduction_4']

    image_height: 224 # 1080 # 224 in GKT
    image_width: 480 # 1920 # 480 in GKT

  cross_view:
    heads: 4
    dim_head: 32
    qkv_bias: True
    skip: True
    no_image_features: False

    # TODO: align and integrate this parameter with augmentation setups
    image_height: 224 # 1080 # 224 in GKT
    image_width: 480 # 1920 # 480 in GKT
    # geometry kernel transformer
    bev_z: 1.0
    kernel_h: 7
    kernel_w: 1
    sampling_type: "index"
    use_kernel_conv: True
    kernel_conv_h: 1
    kernel_conv_w: 7
  
  bev_embedding:
    sigma: 1.0

    bev_height: 200
    bev_width: 200
    h_meters: 100.0
    w_meters: 100.0
    offset: 0.0

    decoder_blocks: ${ldm.gkt.decoder.blocks}

decoder:
  _target_: nn_modules.gkt.decoder.Decoder

  dim: ${ldm.gkt.encoder.dim}
  blocks: [128, 128, 64]
  residual: True
  factor: 2